/*
*  This file is designed to annotate approximate and exact quantities for the use in evaluating entailment
*
*  Gina, 17 Aug 2010
*/
Phase:   Quantity
Input: Token Lookup Number CollectionNounCluster Verb
Options: control = brill
//when appelt "one of the three people" is only 1 people, rather than 1 people, and 3 people

//////////////////////////////////////////////////////////////
Macro: NUMERICALVALUE
// two hundred and thirty five
// twenty five
//a hundred
//at least half a dozen former Soviet republics
(
	( {Token.string == "a"} | {Token.string == "one"} )?
	{Number}
)

Macro: NOUNCLUSTER
( {CollectionNounCluster}
//( {NP}
)

//////////////Qualification of the Quantity//////////////////
Macro: SCOPESHIFTERS
( {Token.string == "no"}|
 {Token.string == "not"}
)
Macro: APPROXIMATEQUANTITY
(	{Token.string == "about"}| 
	{Token.string == "around"}| 
	{Token.string == "many"}|
	{Token.string == "over"}|
	{Token.string == "some"}|
	{Token.string == "several"}|
	{Token.string == "nearly"}|
	{Token.string == "roughly"}|
	{Token.string == "approximately"}|
	{Token.string == "only"}|
	( ( {Token.string == "up"} | {Token.string == "Up"} ) {Token.string == "to"})|
	( ( {Token.string == "a"} | {Token.string == "A"} ) {Token.string == "few"})|
	{Token.string == "About"}| 
	{Token.string == "Around"}| 
	{Token.string == "Many"}|
	{Token.string == "Over"}|
	{Token.string == "Some"}|
	{Token.string == "Several"}|
	{Token.string == "Nearly"}|
	{Token.string == "Roughly"}|
	{Token.string == "Approximately"}|
	{Token.string == "Only"}|
	( 	( {Token.string == "more"} | {Token.string == "More"} | {Token.string == "less"} | {Token.string == "Less"} | {Token.category == "JJR"} ) 
		{Token.string == "than"} 
	)|
	( {Token.string == "at"} 
		( {Token.string == "least"} | {Token.string == "most"} | {Token.category == "JJS"} )
	)|
	( 
			( {Token.string == "as"} |{Token.string == "As"} )
			( {Token.string == "few"} | {Token.string == "many"} )
			{Token.string == "as"})
)

Macro: QUANTITYVERBS
( 	{Token.stem == "higher"}|
	{Token.stem == "increase"}|
	{Token.stem == "decreas"}|
	{Token.stem == "widespread"}|
	{Token.stem == "gain"}
)

Macro: COMPARITIVES
//the world's largest drug company.
( 	{Token.stem == "more"}|
	{Token.stem == "fewer"}|
	{Token.stem == "higher"}|
	{Token.category== "additional"}|
	{Token.category== "extra"}
)


Macro: SUPERLATIVES
//the world's largest drug company.
( 	{Token.stem == "highest"}|
	{Token.stem == "largest"}|
	{Token.stem == "smallest"}|
	{Token.category== "JJS"}
)

//////////////////////////////////////////////////////////////
//Quantity Rules

Rule: ApproximateQuantity
//more than 100 bullets
//at least two charges
//over three children
//over 40 billion dollars
//several rounds of talks
//at least half a dozen former Soviet republics 
//more than 200 tests, more than 200 nuclear tests = 200 tests
(
	(SCOPESHIFTERS)?
	(APPROXIMATEQUANTITY)
	( NUMERICALVALUE ):quantity 
	({Token.string == "of"})? 
	({Token.string == "the"}| {Token.string == "its"})? 
	( {CollectionNounCluster} ):noun  
 )
:number -->
  :number.ApproximateQuantity = 
  {	rule = "ApproximateQuantity", 
	quantity = :quantity.Number.value, 
	quantityrange = :quantity.Number.value, 
	headnoun = :noun.CollectionNounCluster.headnoun}
	

Rule: ApproximateQuantityInCollection
(
	( (SCOPESHIFTERS)?  (APPROXIMATEQUANTITY)	)?
	( {CollectionNounCluster.value != "UNKNOWN"} ):noun 
)
:number -->
  :number.ApproximateQuantityInCollection = 
  {	rule = "ApproximateQuantity", 
	quantity = :noun.CollectionNounCluster.value, 
	quantityrange = :quantity.Number.value,
	headnoun = :noun.CollectionNounCluster.headnoun}
	


Rule: ExactQuantity
//  100 bullets
//  two charges
//One of the three people who were still missing from the accident was found, while there is yet no sign of the other two persons. = 
//	one of the three people
// three people
// two persons
(
	(NUMERICALVALUE):quantity
	( 	 {Token.string == "of"} 
			( {Token.string == "the"} | {Token.string == "its"} )? 
			( {Number} )?
	)?
	({CollectionNounCluster}):noun  
)
:number -->
  :number.ExactQuantity = 
  			{rule = "ExactQuantity", 
			quantity = :quantity.Number.value, 
			quantityrange = :quantity.Number.value,
			headnoun = :noun.CollectionNounCluster.headnoun}


//////////////////////////////////////////////////////////////
//Age rules
Rule: Age
//35-year-old
//35 years old
// 5-year-olds
//55-year-old 55 years old= 55 year
//15-year mission
//TBD: add month, day, week, decade etc

(
 (NUMERICALVALUE):quantity
 ({Token.string == "-"})?
	( 	({Token.stem == "year"}{Token.stem == "old"}) | 
		({Token.string == "year-old"} ) |
		{Token.stem == "year"} 
	)
)
:number -->
  :number.ExactQuantity = 
  			{rule = "Age", 
			quantity = :quantity.Number.value, 
			headnoun = "year"}

Rule: SimpleQuantity
(
	(NUMERICALVALUE):quantity
	{Token.string == "-"}
	({Token.category == "NN"}):noun
)
:number -->
  :number.ExactQuantity = 
  			{rule = "SimpleQuantity", 
			quantity = :quantity.Number.value, 
			headnoun = :noun.Token.stem}

	
Rule: MissingHeadNoun
//100 were wounded
//100 died
	(
		(NUMERICALVALUE):quantity
		({Token.category == "VBD"} | {Token.category == "VBZ"} | {Verb} ):verb
	)
	:number -->
	  :number.ExactQuantity = 
	  			{rule = "MissingHeadNounAssumePeople", 
				quantity = :quantity.Number.value, 
				headnoun = "people",
				verb = :verb.Token.string}